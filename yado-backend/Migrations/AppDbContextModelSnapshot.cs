// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using yado_backend.Data;

#nullable disable

namespace yado_backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("yado_backend.Models.Companie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("LogoImg")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("ID");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("yado_backend.Models.Country", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("yado_backend.Models.Favorite", b =>
                {
                    b.Property<string>("UserUuid")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("HotelUuid")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserUuid", "HotelUuid");

                    b.HasIndex("HotelUuid");

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("yado_backend.Models.Hotel", b =>
                {
                    b.Property<string>("UUID")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1500)
                        .HasColumnType("varchar(1500)");

                    b.Property<float>("Latitude")
                        .HasColumnType("float");

                    b.Property<float>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("NumVisited")
                        .HasColumnType("int");

                    b.Property<int>("ParameterId")
                        .HasColumnType("int");

                    b.Property<int>("PopulationId")
                        .HasColumnType("int");

                    b.Property<int>("Stars")
                        .HasColumnType("int");

                    b.HasKey("UUID");

                    b.HasIndex("PopulationId");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("yado_backend.Models.Image", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("HotelUuid")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("ID");

                    b.HasIndex("HotelUuid");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("yado_backend.Models.Owner", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("HotelUuid")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserUuid")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.HasKey("ID");

                    b.HasIndex("HotelUuid");

                    b.HasIndex("UserUuid");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("yado_backend.Models.Parameter", b =>
                {
                    b.Property<string>("HotelUuid")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("AeroportSchuttle")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("AirConditioning")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Balcony")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Bath")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("BicycleRental")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("BlatScreenTv")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("BreakfastDinnerIncluded")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("BreakfastIncluded")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("DoubleBed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("EmergencyCordBathroom")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("ExtraLargeDoubleBed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("FacilitesDisabledGuest")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("FamilyRooms")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("FitnessCentre")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("FreeCancellation")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("GolfCourse")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("HigherLevelToilet")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Kitchen")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LaptopFriendlyWorkspace")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LargeDoubleBed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LowerBathroomSink")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Massage")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("NonSmokingRooms")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Parking")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Patio")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("PetsAllowed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("PrivateBathroom")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("PrivatePool")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("ReceptionAlwaysOpen")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Restaurant")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("RoomService")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("SeaView")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("SelfCatering")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Solarium")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Soundproofing")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("SpaWellnessCentre")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("SwimmingPool")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Terrace")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("ToiletGrabRails")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("TwinBeds")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("VeryGoodWifi")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("ViewHotel")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("VisualAidsBraille")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("VisualAidsTactileSigns")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("WashingMachine")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("WheelchairAccessible")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("HotelUuid");

                    b.ToTable("Parameters");
                });

            modelBuilder.Entity("yado_backend.Models.Population", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("StateId");

                    b.ToTable("Populations");
                });

            modelBuilder.Entity("yado_backend.Models.Review", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("HotelUuid")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NegativeComment")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PositiveComment")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<float>("Qualification")
                        .HasColumnType("float");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(36)");

                    b.HasKey("ID");

                    b.HasIndex("HotelUuid");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("yado_backend.Models.Role", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("yado_backend.Models.Site", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("HotelUuid")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<float>("NightlyPrice")
                        .HasColumnType("float");

                    b.Property<string>("OriginUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("ID");

                    b.HasIndex("CompanyId");

                    b.HasIndex("HotelUuid");

                    b.ToTable("Sites");
                });

            modelBuilder.Entity("yado_backend.Models.State", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("ID");

                    b.HasIndex("CountryId");

                    b.ToTable("States");
                });

            modelBuilder.Entity("yado_backend.Models.User", b =>
                {
                    b.Property<string>("UUID")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Gender")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("ImageProfile")
                        .HasMaxLength(50)
                        .HasColumnType("varbinary(8000)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("longtext");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("RoleId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.HasKey("UUID");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("yado_backend.Models.Favorite", b =>
                {
                    b.HasOne("yado_backend.Models.Hotel", "Hotel")
                        .WithMany("Favorites")
                        .HasForeignKey("HotelUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("yado_backend.Models.User", "User")
                        .WithMany("Favorites")
                        .HasForeignKey("UserUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("User");
                });

            modelBuilder.Entity("yado_backend.Models.Hotel", b =>
                {
                    b.HasOne("yado_backend.Models.Population", "Population")
                        .WithMany("Hotels")
                        .HasForeignKey("PopulationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Population");
                });

            modelBuilder.Entity("yado_backend.Models.Image", b =>
                {
                    b.HasOne("yado_backend.Models.Hotel", "Hotel")
                        .WithMany("Images")
                        .HasForeignKey("HotelUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("yado_backend.Models.Owner", b =>
                {
                    b.HasOne("yado_backend.Models.Hotel", "Hotel")
                        .WithMany("Owners")
                        .HasForeignKey("HotelUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("yado_backend.Models.User", "User")
                        .WithMany("OwnedHotels")
                        .HasForeignKey("UserUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("User");
                });

            modelBuilder.Entity("yado_backend.Models.Parameter", b =>
                {
                    b.HasOne("yado_backend.Models.Hotel", "Hotel")
                        .WithOne("Parameters")
                        .HasForeignKey("yado_backend.Models.Parameter", "HotelUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("yado_backend.Models.Population", b =>
                {
                    b.HasOne("yado_backend.Models.State", "State")
                        .WithMany("Populations")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("State");
                });

            modelBuilder.Entity("yado_backend.Models.Review", b =>
                {
                    b.HasOne("yado_backend.Models.Hotel", "Hotel")
                        .WithMany("Reviews")
                        .HasForeignKey("HotelUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("yado_backend.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("User");
                });

            modelBuilder.Entity("yado_backend.Models.Site", b =>
                {
                    b.HasOne("yado_backend.Models.Companie", "Companie")
                        .WithMany("Sites")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("yado_backend.Models.Hotel", "Hotel")
                        .WithMany("Sites")
                        .HasForeignKey("HotelUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Companie");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("yado_backend.Models.State", b =>
                {
                    b.HasOne("yado_backend.Models.Country", "Country")
                        .WithMany("States")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("yado_backend.Models.User", b =>
                {
                    b.HasOne("yado_backend.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("yado_backend.Models.Companie", b =>
                {
                    b.Navigation("Sites");
                });

            modelBuilder.Entity("yado_backend.Models.Country", b =>
                {
                    b.Navigation("States");
                });

            modelBuilder.Entity("yado_backend.Models.Hotel", b =>
                {
                    b.Navigation("Favorites");

                    b.Navigation("Images");

                    b.Navigation("Owners");

                    b.Navigation("Parameters")
                        .IsRequired();

                    b.Navigation("Reviews");

                    b.Navigation("Sites");
                });

            modelBuilder.Entity("yado_backend.Models.Population", b =>
                {
                    b.Navigation("Hotels");
                });

            modelBuilder.Entity("yado_backend.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("yado_backend.Models.State", b =>
                {
                    b.Navigation("Populations");
                });

            modelBuilder.Entity("yado_backend.Models.User", b =>
                {
                    b.Navigation("Favorites");

                    b.Navigation("OwnedHotels");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
